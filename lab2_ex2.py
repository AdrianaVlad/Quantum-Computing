import qiskit
import qiskit_aer
from qiskit import QuantumCircuit, execute
from qiskit_aer import qasm_simulator, Aer
circ1 = QuantumCircuit(2)
circ1.h(0)
circ1.cnot(0,1)
circ1.x(0)
circ1.z(0)
circ1.cnot(1,0)
circ1.h(1)
print(circ1)
backend=Aer.get_backend('unitary_simulator')
job=backend.run(circ1)
results=job.result()
matrice_circ1=results.get_unitary(circ1,decimals=1)
print(matrice_circ1)
backend=Aer.get_backend('statevector_simulator')
job=backend.run(circ1)
results=job.result()
stare=results.get_statevector(circ1,decimals=1)
print(stare)
circ1.measure_all()

circ2 = QuantumCircuit(2)
circ2.cz(0,1)
circ2.h(0)
circ2.s(0)
circ2.h(1)
circ2.swap(0,1)
print(circ2)
backend=Aer.get_backend('unitary_simulator')
job=backend.run(circ2)
results=job.result()
matrice_circ2=results.get_unitary(circ2,decimals=1)
print(matrice_circ2)
backend=Aer.get_backend('statevector_simulator')
job=backend.run(circ2)
results=job.result()
stare=results.get_statevector(circ2,decimals=1)
print(stare)
circ2.measure_all()